import { NumberValueAccessor } from '@angular/forms';
import { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';
import { Note } from './note';

export class BasicInfo {
    JobCardID: number;
    JobCardTypeID: number = 33;
    OldJobCardID: number;
    WorkshopID: number;
    CustomerID: number;
    VehicleID: number;
    Mileage: number;
    MileageUnit: number = 43;
    PaymentMethodID: number = 36;
    StatusID: number;
    JobOpenDate: Date;
    JobCloseDate: Date;
    VehicleDeliveryDate: Date;
    PriorityTypeID: number = 38;
    ContactPersonFirstName: string;
    ContactPersonLastName: string;
    ContactPersonMobile: string
    ContactPersonPhone: string;
    DiscountAmount: number;
    ApprovalSignatureURL: string;
    ApprovalSignatureOn: Date;
    IsUsedParts: boolean;
    ContactMobile: string;
    IsRegularInspection: boolean;
    CreatedBy: number;
    ModifiedBy: number;
    ServiceType: string;
    ServiceTypeID: number = 40;
    Reference: string;
    OldPart: boolean;
    AdvisorName: string;
    AdvisorID: number;
    ForemanName: string;
    PreferredForemanID: number;
    TeamLeader: string;
    PreferredTeamLeadID: number;
    MaintainanceInspection: string;
    PlateNumber: string;
    FuelTankMeterImageURL: string;
    FuelTankReading: number;
    MakeID: number;
    ModelID: number;
    ProductionYear: number;
    NumberOfServices: number;
    TotalCosts: number;
    IsModified: boolean;
    CurrentJobStatus: number;
    JobCardTypeName: string;
    ServiceTypeName: string;
    MileageUnitName: string = 'KM';
    PaymentMethodName: string;
    PreviousJobComments: string;
    EnglishModelName: string;
    EnglishMakeName: string;
    PriorityTypeName: string;
    TotalPartsPrice: number;
    ExternalTasksCost: number;
    InternalTasksCost: number;
    NetAmount: number;
    InvoiceStatusID: number;
    JobInvoiceID: number;
    FeedbackID: number;
    CustomerFullName: string;
    VIN: string;
    Color: string;
    AmountPaid: number;
    CustomerSignatureURL: string;
    TotalAmount: number;
    RemainingAmount: number;
    Total: number;
    JobTaskStatusID: number;
    SupervisorID: number;
    JobProcessID: number;
    IsAccepted: boolean;
    TotalTasksCost: number;
    VIStatusID: number;
    IRStatusID: number;
    PPStatusID: number;
    ApprovalStatusID: number;
    QAStatusID: number;
    ProcessTypeID: number;
    ProcessStatusID: number;
    EngineCapacityName: string;
    EngineTypeName: string;
    JobCardNumber: any;
    showMore: boolean = false;
    CardNumber: string;
    MechanicID: number;
    ElectricianID: number;
    OtherTechID: number;
    InspectionID: number;
    PrintInvoice: boolean;
    IsValetAssign: boolean = false;
    IsIRCompleted: boolean | number;
    SupervisorName: string;
    InspectionComments: string;
    InspectionSignatureURL: string;
    WorkshopAddress: string;
    WorkshopPhone: string;
    Email: string;
    CreatedOn: Date;
    TotalTasksTime: string;
    Tax: number;
    KeyStatusID: number
    IsMileageVerified: boolean = false;
    SignatureBase64: string;
    UserRoleID: number;
    MileageImageURL: string;
    RepairDiscount: number;
    PartDiscount: number;
    PPComplete: boolean = false;
    IsTaxFree: boolean = false;
    TaxDocumentURL: string;
    TaxFreeNote: string;
    IsTaxFreeApproved: boolean = false;
    TotalPartsTax: number = 0;
    TotalTasksTax: number = 0;
    TotalTaxAmount: number = 0;
    InvoiceStatusName: string;
    InspectionTechID: number;
    BodyRepairTechID: number;
    sparePartTechID: number;
    EmployeeID: number;
    AppointmentID: number;
    IsVICompleted: boolean;
    IsOpenedAgain: boolean;
    TotalCost: number = 0;
    TotalPartsDiscount :number = 0;
    TotalPartsNetAmount: number = 0;
    TotalTasksNetAmount: number = 0;
    TotalTasksDiscount :number = 0;
    TotalInternalTax: number = 0;
    TotalExternalTax: number = 0;
    TotalInternalNetAmount :number = 0;
    TotalExternalNetAmount: number = 0; 
    TotalInternalDiscount:number = 0;
    TotalExternalDiscount: number = 0;
    AdditionalPartDiscount: number = 0;
    AdditionalTaskDiscount: number = 0;
    VehicleFront: string;
    IsContractVehicles:boolean;
    SerialNumber:string;
    CompletedCount: number;
    InspectionCount: number;
    NewCount: number;
    WorkCount: number;
    Pending: number;
    InProgress: number;
    Completed: number;
    Rejected: number;
    Preparing: number;
    Delivered: number;
  TotalPartsTaxAmount: number;
  TaskTaxAmount: number;
}